
üß™ Running Euclid Unit Tests...

üìê Testing Geometry Logic

‚àø Testing Curve Primitive
‚úÖ Linear 2D curve t=0
‚úÖ Linear 2D curve t=1
‚úÖ Linear 2D curve t=0.5
‚úÖ Linear 3D curve t=0.5
‚úÖ Nonlinear 2D curve t=0.5
‚úÖ Nonlinear 3D curve t=0.0
‚úÖ Nonlinear 3D curve t=0.5
‚úÖ Nonlinear 3D curve t=1.0
‚úÖ Sinusoidal 2D curve t=0
‚úÖ Sinusoidal 2D curve t=0.25
‚úÖ Sinusoidal 2D curve t=0.5
‚úÖ Sinusoidal 2D curve t=0.75
‚úÖ Sinusoidal 2D curve t=1.0
‚úÖ Curve transform evaluation
‚úÖ Nonlinear 2D t=0
‚úÖ Nonlinear 2D t=0.5
‚úÖ Nonlinear 2D t=1.0
‚úÖ Nonlinear 2D t=-0.5
‚úÖ Nonlinear 2D t=1.5
‚úÖ Nonlinear 3D t=0.5
‚úÖ Nonlinear 3D t=1.5
‚úÖ Nonlinear 4D t=0.5
‚úÖ Nonlinear 4D t=-0.5
‚úÖ Nonlinear 5D t=0.5
‚úÖ Nonlinear 5D t=1.5

‚àø Testing Curve Derivative (Adaptive Tolerance)
[DEBUG] expected: 1 1, got: 1 1, tol: 1.17071e-05
‚úÖ Linear curve derivative (adaptive)
[DEBUG] expected: 1 1, got: 1 1, tol: 1.1309e-05
‚úÖ Quadratic curve derivative (adaptive)
[DEBUG] expected:       1 1.64872, got:      1 1.6487, tol: 1.38716e-05
‚úÖ Exponential curve derivative (adaptive)
[DEBUG] expected:        1 -6.28319, got:        1 -6.28318, absErr: 1.43051e-06, relErr: 2.24843e-07, tol: 1.1e-05
‚úÖ Sinusoidal curve derivative (adaptive)
[DEBUG] expected:     -6.28319 -2.74647e-07, got: -6.28313        0, absErr: 5.24528e-05, relErr: 8.34812e-06, tol: 1.2e-05
‚úÖ Circular curve derivative (adaptive)
[DEBUG] expected:     1 -0.25, got:         1 -0.250018, tol: 1.15e-05
‚úÖ Cubic curve derivative (adaptive)
[DEBUG] expected: 0.48 0.64, got: 0.480005 0.639999, tol: 1.10472e-05
‚úÖ Rational quadratic curve derivative (adaptive)
[DEBUG] expected:    -6.28319 3.84734e-16           1, got: -6.28319        0        1, tol: 1.22808e-05
‚úÖ Helix curve derivative (adaptive)
[DEBUG] expected:   1 2.5, got:   1 2.5, tol: 1.17071e-05
‚úÖ Sigmoid curve derivative (adaptive)
[DEBUG] expected:    -9.42478    -25.1327 1.12389e-07, got: -9.42537 -25.1304        0, absErr: 0.00245086, relErr: 9.13075e-05, scaledTol: 0.000344517, relTol: 0.00042342
‚úÖ Torus knot curve derivative (adaptive)

‚àø Testing Curve Second Derivative (Adaptive Tolerance)
[DEBUG] Linear: expected=0 0, got=0 0, diff=0, relTol=1e-05
‚úÖ Linear curve second derivative (adaptive)
[DEBUG] Quadratic: expected=0 2, got=      0 1.99816, diff=0.00184405, relTol=0.002
‚úÖ Quadratic curve second derivative (adaptive)
[DEBUG] Circular: expected=1.72566e-06    -39.4784, got=0.000133727     -39.471, diff=0.0074589, relTol=0.0394784
‚úÖ Circular curve second derivative (adaptive)
[DEBUG] Sinusoidal: expected=       0 -39.4784, got=      0 -39.471, diff=0.00745773, relTol=0.0394784
‚úÖ Sinusoidal curve second derivative (adaptive)
[DEBUG] Helix: expected=-2.41736e-15     -39.4784            0, got=-2.03396e-11      -39.471            0, diff=0.00745392, relTol=0.0394784
‚úÖ Helix curve second derivative (adaptive)

‚àø Testing Curve Derivative Accuracy (Confidence-Aware)
   This test validates the numerical accuracy of evaluateDerivativeWithConfidence(t)
   for representative parametric curves under the current adaptive tolerance model.
   It compares computed first derivatives against exact analytical derivatives
   at a fixed parameter (t=0.5) and reports absolute error, relative error,
   confidence (stability), and adaptive tolerance scaling.
   Note: this is a pointwise accuracy validation, not a convergence (resolution) test.


| Curve        | absErr         | relErr         | conf       | tol            |
|-------------------------------------------------------------------------------|
| Linear       |   0.000000e+00 |   0.000000e+00 | 1.000000e+00 |   1.212132e-05 |
| Quadratic    |   4.768372e-07 |   3.371748e-07 | 7.573286e-01 |   1.197323e-05 |
| Cubic        |   2.026558e-06 |   1.621246e-06 | 7.549197e-01 |   1.176539e-05 |
| Exponential  |   1.077652e-04 |   7.993144e-06 | 7.503707e-01 |   2.799170e-05 |
| Sinusoidal   |   3.433228e-04 |   1.092277e-05 | 9.963255e-01 |   4.193184e-05 |
| Torus-like   |   2.318681e-05 |   3.690295e-07 | 7.500066e-01 |   7.533185e-05 |

‚àø Testing Derivative Cache and Adaptive Parametric Solver
[DEBUG] Cached derivative call stable: true at t=0.25
‚úÖ Derivative cache consistency
‚úÖ Derivative cache numerical accuracy
[DEBUG] adaptiveParametricSolve: root=0.5 diff=0
‚úÖ Adaptive parametric solver (simple root)
[DEBUG] adaptiveParametricSolve(sin): root=0.5 diff=0
‚úÖ Adaptive parametric solver (oscillatory root)

‚àø Curve Derivative Parametric Step Sensitivity (Confidence-Aware)
   This test examines how the derivative confidence reacts to evaluating
   the curve slightly away from the target parameter. It does NOT try to
   scale the tolerance; it only perturbs t and observes stability.

| Curve        | Œ¥t        | absErr         | relErr         | conf       |
|---------------------------------------------------------------------------|
| Linear       | 1.000e-01  | 0.000000e+00   | 0.000000e+00   | 1.000000e+00 |
| Linear       | 3.000e-02  | 0.000000e+00   | 0.000000e+00   | 1.000000e+00 |
| Linear       | 1.000e-02  | 0.000000e+00   | 0.000000e+00   | 1.000000e+00 |
| Linear       | 3.000e-03  | 0.000000e+00   | 0.000000e+00   | 1.000000e+00 |
| Linear       | 1.000e-03  | 0.000000e+00   | 0.000000e+00   | 1.000000e+00 |
| Linear       | 3.000e-04  | 0.000000e+00   | 0.000000e+00   | 1.000000e+00 |
| Linear       | 1.000e-04  | 0.000000e+00   | 0.000000e+00   | 1.000000e+00 |
| Quadratic    | 1.000e-01  | 2.000000e-01   | 1.414214e-01   | 7.573019e-01 |
| Quadratic    | 3.000e-02  | 5.999660e-02   | 4.242401e-02   | 7.573019e-01 |
| Quadratic    | 1.000e-02  | 2.000117e-02   | 1.414296e-02   | 7.573020e-01 |
| Quadratic    | 3.000e-03  | 6.000996e-03   | 4.243345e-03   | 7.573019e-01 |
| Quadratic    | 1.000e-03  | 2.001286e-03   | 1.415123e-03   | 7.573421e-01 |
| Quadratic    | 3.000e-04  | 6.030798e-04   | 4.264418e-04   | 7.573286e-01 |
| Quadratic    | 1.000e-04  | 1.997948e-04   | 1.412762e-04   | 7.573020e-01 |
| Sinusoidal   | 1.000e-01  | 1.199958e+00   | 1.886055e-01   | 7.506434e-01 |
| Sinusoidal   | 3.000e-02  | 1.112599e-01   | 1.748747e-02   | 7.519998e-01 |
| Sinusoidal   | 1.000e-02  | 1.239347e-02   | 1.947966e-03   | 7.557939e-01 |
| Sinusoidal   | 3.000e-03  | 1.109123e-03   | 1.743284e-04   | 7.704087e-01 |
| Sinusoidal   | 1.000e-03  | 1.473427e-04   | 2.315884e-05   | 8.129325e-01 |
| Sinusoidal   | 3.000e-04  | 3.433228e-05   | 5.396234e-06   | 8.314201e-01 |
| Sinusoidal   | 1.000e-04  | 2.479553e-05   | 3.897281e-06   | 8.614093e-01 |


‚àø Curve Derivative Curvature‚ÄìConfidence Correlation
   This diagnostic test examines how numerical confidence in first-derivative
   estimation correlates with local geometric curvature across representative
   curves. For each curve, samples at multiple parameter values (t) are used to
   compute:
     - curvature Œ∫ = |x'y'' ‚àí y'x''| / (x'^2 + y'^2)^(3/2)
     - confidence from evaluateDerivativeWithConfidence(t)
     - stability metric = conf / Œ∫ (confidence per unit curvature)
   This helps assess how robust confidence tracking remains as local curvature
   increases. Higher curvature should generally reduce confidence, while a stable
   tolerance model should produce consistent efficiency across curves.

| Curve      | t      | Curvature    | Conf       | Stability    |
|-----------------------------------------------------------------|
| Linear     | 1.000000e-01 | 0.000000e+00 | 1.000000e+00 | 0.000000e+00 |
| Linear     | 3.000000e-01 | 0.000000e+00 | 1.000000e+00 | 0.000000e+00 |
| Linear     | 5.000000e-01 | 0.000000e+00 | 1.000000e+00 | 0.000000e+00 |
| Linear     | 7.000000e-01 | 0.000000e+00 | 1.000000e+00 | 0.000000e+00 |
| Linear     | 9.000000e-01 | 0.000000e+00 | 1.000000e+00 | 0.000000e+00 |
| Quadratic  | 1.000000e-01 | 1.887239e+00 | 7.573178e-01 | 4.012834e-01 |
| Quadratic  | 3.000000e-01 | 1.259913e+00 | 7.573085e-01 | 6.010801e-01 |
| Quadratic  | 5.000000e-01 | 7.064871e-01 | 7.573286e-01 | 1.071964e+00 |
| Quadratic  | 7.000000e-01 | 3.923255e-01 | 7.573020e-01 | 1.930290e+00 |
| Quadratic  | 9.000000e-01 | 2.381265e-01 | 7.572755e-01 | 3.180139e+00 |
| Sinusoidal | 1.000000e-01 | 1.659843e-01 | 7.506455e-01 | 4.522388e+00 |
| Sinusoidal | 3.000000e-01 | 3.606411e+00 | 7.503989e-01 | 2.080736e-01 |
| Sinusoidal | 5.000000e-01 | 2.314435e-04 | 1.000000e+00 | 4.320708e+03 |
| Sinusoidal | 7.000000e-01 | 3.596151e+00 | 7.503994e-01 | 2.086674e-01 |
| Sinusoidal | 9.000000e-01 | 1.673892e-01 | 7.506451e-01 | 4.484428e+00 |
| Torus-like | 1.000000e-01 | 3.261011e-01 | 7.500213e-01 | 2.299966e+00 |
| Torus-like | 3.000000e-01 | 5.476326e-01 | 7.500082e-01 | 1.369546e+00 |
| Torus-like | 5.000000e-01 | 5.814472e-01 | 7.500066e-01 | 1.289896e+00 |
| Torus-like | 7.000000e-01 | 5.512497e-01 | 7.500082e-01 | 1.360560e+00 |
| Torus-like | 9.000000e-01 | 3.215373e-01 | 7.500213e-01 | 2.332611e+00 |

‚á¢ Mean Efficiency Summary (mean(conf/Œ∫)):
| Curve        | Mean Efficiency |
|------------------------------|
| Linear       |  10000.00000 |
| Quadratic    |      1.43695 |
| Sinusoidal   |    866.02625 |
| Torus-like   |      1.73052 |

‚á¢ Normalized Efficiency (mean(conf/Œ∫) / mean(conf)):
| Curve        | Normalized   |
|------------------------------|
| Linear       |  10000.00000 |
| Quadratic    |      1.89745 |
| Sinusoidal   |   1081.96777 |
| Torus-like   |      2.30731 |


‚àø Testing Curve Second Derivative (Adaptive Tolerance)
[DEBUG] Linear: expected=0.00000 0.00000, got=0.00000 0.00000, diff=0.00000, relTol=0.00001
‚úÖ Linear curve second derivative (adaptive)
[DEBUG] Quadratic: expected=0.00000 2.00000, got=0.00000 1.99816, diff=0.00184, relTol=0.00200
‚úÖ Quadratic curve second derivative (adaptive)
[DEBUG] Circular: expected=  0.00000 -39.47842, got=  0.00013 -39.47096, diff=0.00746, relTol=0.03948
‚úÖ Circular curve second derivative (adaptive)
[DEBUG] Sinusoidal: expected=  0.00000 -39.47842, got=  0.00000 -39.47096, diff=0.00746, relTol=0.03948
‚úÖ Sinusoidal curve second derivative (adaptive)
[DEBUG] Helix: expected= -0.00000 -39.47842   0.00000, got= -0.00000 -39.47096   0.00000, diff=0.00745, relTol=0.03948
‚úÖ Helix curve second derivative (adaptive)

‚àø Testing Curve Second Derivative Accuracy (Adaptive Convergence)
   This test validates the numerical accuracy of evaluateSecondDerivative(t)
   for representative parametric curves under the current adaptive tolerance model.
   It compares computed second derivatives against exact analytical second derivatives
   at a fixed parameter (t=0.5) and reports absolute error, relative error,
   and adaptive tolerance scaling.
   Note: this is a pointwise accuracy validation, not a convergence (resolution) test.


| Curve        | absErr         | relErr         | conf       | tol            |
|-------------------------------------------------------------------------------|
| Linear       |   0.000000e+00 |              - |          - |   2.070711e-05 |
| Quadratic    |   1.844049e-03 |   9.220243e-04 |          - |   2.255902e-05 |
| Exponential  |   2.461135e-02 |   1.492754e-02 |          - |   2.337159e-05 |
| Sinusoidal   |   1.102035e-04 |              - |          - |   2.050000e-05 |
| Circular     |   7.454733e-03 |   1.888306e-04 |          - |   6.047841e-05 |
| Cubic        |   2.155542e-03 |   7.185141e-04 |          - |   2.362500e-05 |
| Sigmoid      |   4.921566e-03 |              - |          - |   2.070711e-05 |
| Sigmoid-0.4  |   9.279251e-03 |   1.021294e-03 |          - |   2.997147e-05 |
| Sigmoid-0.6  |   4.357338e-03 |   4.795780e-04 |          - |   2.965352e-05 |

‚àø Testing Curve Integral (Adaptive Tolerance)
[DEBUG] Linear curve: expected=1.41421, computed=1.41421, diff=1.19209e-07, tol=1e-05
‚úÖ Linear curve integral (arc length)
[DEBUG] Quadratic curve: expected=1.47894, computed=1.47894, diff=4.76837e-07, tol=1.5e-05
‚úÖ Quadratic curve integral (arc length)
[DEBUG] Circular curve: expected=6.28319, computed=6.28318, diff=3.33786e-06, tol=1.5e-05
‚úÖ Circular curve integral (arc length)
[DEBUG] Sinusoidal curve: expected=4.18828, computed=4.18828, diff=9.53674e-07, tol=3e-05
‚úÖ Sinusoidal curve integral (arc length)
[DEBUG] Helix curve: expected=6.36227, computed=6.36226, diff=2.38419e-06, tol=2e-05
‚úÖ Helix curve integral (arc length)
[DEBUG] Exponential curve: expected=2.00345, computed=2.00349, diff=4.17233e-05, tol=2e-05
‚úÖ Exponential curve integral (arc length)
[DEBUG] Cubic curve: expected=1.31136, computed=1.31136, diff=1.54972e-06, tol=2.5e-05
‚úÖ Cubic curve integral (arc length)
[DEBUG] Rational quadratic curve: expected=1.5708, computed=1.5708, diff=2.38419e-06, tol=2.5e-05
‚úÖ Rational quadratic curve integral (arc length)
[DEBUG] Sigmoid curve: expected=1.52326, computed=1.52326, diff=8.34465e-07, tol=2.5e-05
‚úÖ Sigmoid curve integral (arc length)
[DEBUG] Torus knot curve: expected=26.8887, computed=26.8887, diff=2.09808e-05, tol=5e-05
‚úÖ Torus knot curve integral (arc length)

‚àø Testing Curve Local Curvature (Adaptive Tolerance)
[DEBUG] Linear: expected=0, computed=0, diff=0, tol=1.000000e-05, scaledTol=9.999999e-04
‚úÖ Linear curve curvature
[DEBUG] Circular: expected=1, computed=1.0002, diff=0.000195384, tol=1.000000e-05, scaledTol=9.999999e-04
‚úÖ Circular curve curvature
[DEBUG] Quadratic: expected=0.707107, computed=0.707109, diff=2.14577e-06, tol=1.000000e-05, scaledTol=9.999999e-04
‚úÖ Quadratic curve curvature
[DEBUG] Helix: expected=0.975295, computed=0.975477, diff=0.000181675, tol=1.000000e-05, scaledTol=2.000000e-03
‚úÖ Helix curve curvature
[DEBUG] Sinusoidal: expected=39.4784, computed=39.4735, diff=0.00493622, tol=1.000000e-05, scaledTol=5.000000e-03
‚úÖ Sinusoidal curve curvature

‚àø Testing Curve Tangent (Adaptive Tolerance)
[DEBUG] Linear: expected=0.707107 0.707107, computed=0.707107 0.707107, diff=0, tol=1e-05
‚úÖ Linear curve tangent
[DEBUG] Circular: expected=          -1 -4.37114e-08, computed=-1  0, diff=4.37114e-08, tol=1e-05
‚úÖ Circular curve tangent
[DEBUG] Helix: expected=  -0.987571 6.04713e-17    0.157177, computed=-0.987571         0  0.157177, diff=6.04713e-17, tol=1e-05
‚úÖ Helix curve tangent

‚àø Testing Curve Subdivision
[DEBUG] Midpoint continuity check:
   original mid =  0.5 0.25
   left end     =  0.5 0.25
   right start  =  0.5 0.25
‚úÖ Continuity at subdivision point
‚úÖ Left start matches original start
‚úÖ Right end matches original end
[DEBUG] Subdivision at t=0.25:
   original =   0.25 0.0625
   left end =   0.25 0.0625
   right start =   0.25 0.0625
‚úÖ Continuity at t=0.25
[DEBUG] Subdivision at t=0.75:
   original =   0.75 0.5625
   left end =   0.75 0.5625
   right start =   0.75 0.5625
‚úÖ Continuity at t=0.75
[DEBUG] 3D curve subdivision at t=0.5:
   original mid =   0.5  0.25 0.125
   left end     =   0.5  0.25 0.125
   right start  =   0.5  0.25 0.125
‚úÖ 3D curve midpoint continuity (isApprox)
[DEBUG] 4D curve subdivision at t=0.5:
   original mid =          0.5         0.25        0.125 -8.74228e-08
   left end     =          0.5         0.25        0.125 -8.74228e-08
   right start  =          0.5         0.25        0.125 -8.74228e-08
‚úÖ 4D curve midpoint continuity (isApprox)
[DEBUG] 5D curve subdivision at t=0.5:
   original mid =          0.5         0.25        0.125 -8.74228e-08           -1
   left end     =          0.5         0.25        0.125 -8.74228e-08           -1
   right start  =          0.5         0.25        0.125 -8.74228e-08           -1
‚úÖ 5D curve midpoint continuity (isApprox)

‚àø Testing Curve Bounding Box (Adaptive)
[DEBUG] Linear bounding box: min=0 0 max=1 1
‚úÖ Linear bounding box
[DEBUG] Quadratic bounding box: min=0 0 max=1 1
‚úÖ Quadratic bounding box (min‚âà0,0 max‚âà1,1)
[DEBUG] Cubic bounding box: min=0 0 max=       1 0.384521
‚úÖ Cubic bounding box (covers full range)
[DEBUG] Helix bounding box: min=-1 -1  0 max=1 1 1
‚úÖ Helix bounding box (z in [0,1])
[DEBUG] 4D bounding box: min= 0  0  0 -1 max=1 1 1 1
‚úÖ 4D bounding box (includes sin range)
[DEBUG] 5D bounding box: min= 0  0  0 -1 -1 max=1 1 1 1 1
‚úÖ 5D bounding box (includes sin/cos range)
[DEBUG] Circular bounding box: min=-1 -1 max=1 1
‚úÖ Circular bounding box (approx unit circle)
[DEBUG] Sinusoidal bounding box: min= 0 -1 max=1 1
‚úÖ Sinusoidal bounding box (approx ¬±1 in y)

‚àø Testing Bezier Curves
‚úÖ Bezier linear t=0
‚úÖ Bezier linear t=1
‚úÖ Bezier linear t=0.5
[DEBUG] Quadratic Bezier midpoint: got=(0.75 0.25) expected=(0.75 0.25)
‚úÖ Bezier quadratic t=0
‚úÖ Bezier quadratic t=1
‚úÖ Bezier quadratic t=0.5 ‚âà (0.75,0.25)

‚àø Testing NURBS Curves
[DEBUG] NURBS quarter circle: start=(1 0) mid=(0.707107 0.707107) end=(0 1)
[DEBUG] NURBS quarter circle midpoint magnitude: 1 (expected ‚âà 1)
‚úÖ NURBS quarter circle start ‚âà (1,0)
‚úÖ NURBS quarter circle end ‚âà (0,1)
‚úÖ NURBS quarter circle midpoint ‚âà (0.7,0.7), |mid|‚âà1
‚àø Testing Bezier Derivatives
‚úÖ Linear derivative constant
[DEBUG] Quadratic Bezier derivative at t=0.5: 1 1
‚úÖ Quadratic derivative direction correct
[DEBUG] Cubic curvature at t=0.5: 2.66643
‚úÖ Cubic curvature nonzero and smooth
[DEBUG] Bezier tangent ratio: 0.999984
[DEBUG] Bezier curvature magnitude at t=0.5: 5.98462
‚àø Testing NURBS Derivatives
[DEBUG] NURBS derivative @t=0.5: -1.17156  1.17156
[DEBUG] NURBS curvature @t=0.5: 0.998975
‚úÖ NURBS derivative nonzero, curvature positive
[DEBUG] NURBS tangent continuity ratio: 0.853565
[DEBUG] NURBS curvature magnitude: 2.72838
‚àø Testing Advanced Bezier Curves
[DEBUG] Bezier 4th-degree endpoints: start=0 0 end=1 0
‚úÖ Bezier 4th-degree endpoints correct
[DEBUG] Bezier closed loop endpoints: start=0 0 end=0 0
‚úÖ Bezier loop continuity: endpoints match
[DEBUG] 3D Bezier midpoint: 1 1 1
‚úÖ 3D Bezier: non-zero z-component verified
[DEBUG] Affine test: translated=   5.33 -2.6993 expected=   5.33 -2.6993
‚úÖ Bezier affine invariance passed

‚àø Testing Advanced NURBS Curves
[DEBUG] Nonuniform NURBS midpoint: 0.414062 0.546875
‚úÖ Nonuniform knots test passed
[DEBUG] Weighted NURBS midpoint:  0.38172 0.376344
‚úÖ Rational weighting affects curvature
[DEBUG] 3D NURBS midpoint: 0.588889 0.588889      0.3
‚úÖ 3D NURBS z-component verified
[DEBUG] Closed NURBS endpoints: 0 0 vs 0 0
‚úÖ Closed NURBS loop continuity verified

‚àø Testing Bezier C¬π Continuity
[DEBUG] Bezier tangent dot: 1
‚úÖ Bezier C¬π tangent continuity verified

‚àø Testing NURBS Arc Length Consistency
[DEBUG] Chord ‚âà 1.41421, 2-chord ‚âà 1.53073, analytic œÄ/2 ‚âà 1.5708
‚úÖ NURBS quarter-circle arc-length matches analytic œÄ/2

‚àø Testing Bezier Reparameterization Consistency
[DEBUG] Bezier reparam test: orig(0.25)=0.226562 0.439062, sub(0.5)=0.226563 0.439062
[DEBUG] Bezier reparam error = 1.49012e-08
‚úÖ Bezier reparameterization consistent at t=0.25

‚àø Testing NURBS Internal Knot Continuity
[DEBUG] NURBS internal knot (quad): pMid=0.6 0.8 vs ctrl=0.6 0.8 dist=0
‚úÖ NURBS internal knot positional continuity verified (quadratic, mult=2)
[DEBUG] left=  0.5988 0.799198 right=0.6008 0.7984 jump=0.00215343

‚àø Testing Curve - Curve intersection:
--- Test Case 1: Diagonal Cross ---
Number of intersection points: 1
  Point 0: (  0.500000,   0.500000) | Parameters: u_curve=  0.500000, u_curve2=  0.500000
‚úÖ Curve‚ÄìCurve intersection: has intersection
‚úÖ Correct intersection location
----------------------------------------
--- Test Case 2: Parallel Lines ---
Number of intersection points: 0
‚úÖ Curve‚ÄìCurve intersection: no intersection
----------------------------------------
--- Test Case 3: Sinusoidal Intersections ---
Number of intersection points: 3
  Point 0: (  0.000000,   0.000000) | Parameters: u_curve=  0.000000, u_curve2=  0.000000
  Point 1: (  0.500000,   0.000000) | Parameters: u_curve=  0.500000, u_curve2=  0.500000
  Point 2: (  1.000000,  -0.000000) | Parameters: u_curve=  1.000000, u_curve2=  1.000000
‚úÖ Curve‚ÄìCurve intersection: expected 3 intersections
[Analytical validation for sinusoidal intersections]
  [Expected] u=0.000000 ‚Üí (0.000000, 0.000000) | best Œîu=0.000000 Œîp=0.000000
  [Expected] u=0.500000 ‚Üí (0.500000, 0.000000) | best Œîu=0.000000 Œîp=0.000000
  [Expected] u=1.000000 ‚Üí (1.000000, -0.000000) | best Œîu=0.000000 Œîp=0.000000
----------------------------------------
--- Test Case 3B: Sinusoidal Intersections (Extended Domain) ---
Number of intersection points: 5
  Point 0: (  0.000000,   0.000000) | Parameters: u_curve=  0.000000, u_curve2=  0.000000
  Point 1: (  0.500000,   0.000001) | Parameters: u_curve=  0.500000, u_curve2=  0.500000
  Point 2: (  1.000000,  -0.000000) | Parameters: u_curve=  1.000000, u_curve2=  1.000000
  Point 3: (  1.500000,   0.000000) | Parameters: u_curve=  1.500000, u_curve2=  1.500000
  Point 4: (  2.000000,  -0.000000) | Parameters: u_curve=  2.000000, u_curve2=  2.000000
‚úÖ Curve‚ÄìCurve intersection: expected 5 intersections (extended domain)
[Analytical validation for sinusoidal intersections (extended domain)]
  [Expected] u=0.000000 ‚Üí (0.000000, 0.000000) | best Œîu=0.000000 Œîp=0.000000
  [Expected] u=0.500000 ‚Üí (0.500000, 0.000000) | best Œîu=0.000000 Œîp=0.000002
  [Expected] u=1.000000 ‚Üí (1.000000, -0.000000) | best Œîu=0.000000 Œîp=0.000000
  [Expected] u=1.500000 ‚Üí (1.500000, 0.000000) | best Œîu=0.000000 Œîp=0.000000
  [Expected] u=2.000000 ‚Üí (2.000000, -0.000000) | best Œîu=0.000000 Œîp=0.000000
----------------------------------------
--- Test Case 4: Circle‚ÄìLine Intersection ---
Number of intersection points: 2
  Point 0: (  1.000000,   0.000000) | Parameters: u_curve=  0.000000, u_curve2=  1.000000
  Point 1: ( -1.000000,   0.000000) | Parameters: u_curve=  0.500000, u_curve2=  0.000000
‚úÖ Curve‚ÄìCurve intersection: two intersections (circle-line)
----------------------------------------
--- Test Case 5: Tangential Intersection ---
Number of intersection points: 1
  Point 0: (  0.000000,   1.000000) | Parameters: u_curve=  0.250000, u_curve2=  0.500000
‚úÖ Curve‚ÄìCurve intersection: single tangent point
----------------------------------------
--- Test Case 6: Overlapping Curves ---
Number of intersection points: 1
  Point 0: (  0.000000,   0.000000) | Parameters: u_curve=  0.000000, u_curve2=  0.000000
‚úÖ Curve‚ÄìCurve intersection: overlapping curves
----------------------------------------
--- Test Case 7: Offset Sine Curves ---
Number of intersection points: 2
  Point 0: (  0.187500,   0.923880) | Parameters: u_curve=  0.187500, u_curve2=  0.187500
  Point 1: (  0.687500,  -0.923880) | Parameters: u_curve=  0.687500, u_curve2=  0.687500
‚úÖ Curve‚ÄìCurve intersection: expected 2 intersections for offset sine curves
----------------------------------------
--- Test Case 8: Perpendicular Circular Arcs ---
Number of intersection points: 2
  Point 0: (  1.000000,   0.000000) | Parameters: u_curve=  0.000000, u_curve2=  0.000000
  Point 1: ( -1.000000,   0.000000) | Parameters: u_curve=  1.000000, u_curve2=  1.000000
‚úÖ Curve‚ÄìCurve intersection: two intersections near x ‚âà 0.5
----------------------------------------
--- Test Case 9: Spiral vs Line ---
